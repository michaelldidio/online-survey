{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fatim\\\\Desktop\\\\SurveysFinal\\\\src\\\\pages\\\\Fill.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getForm } from \"../db\";\nimport RenderReactiveForm from '../components/RenderReactiveForm';\nimport { expired } from '../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Fill() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [form, setForm] = useState(null);\n  const [msg, setMsg] = useState('');\n  const [submitted, setSubmitted] = useState(false);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    if (!localStorage.getItem('gfc-user')) return;\n\n    const fetchData = async () => {\n      try {\n        let frm = await getForm({\n          id\n        });\n        setForm(frm);\n        setLoading(false);\n      } catch (e) {\n        setLoading(false);\n        setMsg(e.message);\n      }\n    };\n\n    fetchData();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading\",\n      children: form ? form.title : \"Fill in the form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center mt-1\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 59\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 27\n    }, this) : msg ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"msg mt-1\",\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }, this) : submitted ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"msg mt-1\",\n      children: form ? form.endMessage || \"Thank you for submitting the form\" : \"Unknown state\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 31\n    }, this) : form ? expired() ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"msg mt-1\",\n      children: \"This form has been expired\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 38\n    }, this) : /*#__PURE__*/_jsxDEV(RenderReactiveForm, {\n      model: form,\n      onSubmitted: () => setSubmitted(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"msg mt-1\",\n      children: \"Form not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Fill, \"nc0lW3CAmVIV+UFZcwoC8A1EqWE=\", false, function () {\n  return [useParams];\n});\n\n_c = Fill;\nexport default Fill;\n\nvar _c;\n\n$RefreshReg$(_c, \"Fill\");","map":{"version":3,"sources":["C:/Users/fatim/Desktop/SurveysFinal/src/pages/Fill.js"],"names":["useState","useEffect","useParams","getForm","RenderReactiveForm","expired","Fill","id","form","setForm","msg","setMsg","submitted","setSubmitted","loading","setLoading","localStorage","getItem","fetchData","frm","e","message","title","endMessage"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,SAASC,OAAT,QAAwB,OAAxB;AAEA,OAAOC,kBAAP,MAA+B,kCAA/B;AAEA,SAASC,OAAT,QAAwB,UAAxB;;;AAEA,SAASC,IAAT,GAAe;AAAA;;AACX,QAAM;AAAEC,IAAAA;AAAF,MAASL,SAAS,EAAxB;AAEA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACU,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAACe,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAJ,EAAsC;;AACtC,UAAMC,SAAS,GAAG,YAAY;AAC1B,UAAG;AACC,YAAIC,GAAG,GAAG,MAAMhB,OAAO,CAAC;AAAEI,UAAAA;AAAF,SAAD,CAAvB;AACAE,QAAAA,OAAO,CAACU,GAAD,CAAP;AACAJ,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OAJD,CAIC,OAAMK,CAAN,EAAQ;AACLL,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAJ,QAAAA,MAAM,CAACS,CAAC,CAACC,OAAH,CAAN;AACH;AACJ,KATD;;AAUAH,IAAAA,SAAS;AACZ,GAbQ,EAaN,CAACX,EAAD,CAbM,CAAT;AAeA,sBACI;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA,gBAAyBC,IAAI,GAAGA,IAAI,CAACc,KAAR,GAAgB;AAA7C;AAAA;AAAA;AAAA;AAAA,YADJ,EAGQR,OAAO,gBAAG;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA,6BAAgC;AAAM,QAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA;AAAhC;AAAA;AAAA;AAAA;AAAA,YAAH,GACLJ,GAAG,gBAAG;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA,gBAA0BA;AAA1B;AAAA;AAAA;AAAA;AAAA,YAAH,GACHE,SAAS,gBAAG;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA,gBAA0BJ,IAAI,GAAIA,IAAI,CAACe,UAAL,IAAmB,mCAAvB,GAA8D;AAA5F;AAAA;AAAA;AAAA;AAAA,YAAH,GACTf,IAAI,GAAGH,OAAO,kBAAK;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAL,gBACd,QAAC,kBAAD;AAAoB,MAAA,KAAK,EAAEG,IAA3B;AAAiC,MAAA,WAAW,EAAE,MAAMK,YAAY,CAAC,IAAD;AAAhE;AAAA;AAAA;AAAA;AAAA,YADI,gBAEJ;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARV;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GApCQP,I;UACUJ,S;;;KADVI,I;AAsCT,eAAeA,IAAf","sourcesContent":["import { useState, useEffect } from 'react'\n\nimport { useParams } from 'react-router-dom'\n\nimport { getForm } from \"../db\"\n\nimport RenderReactiveForm from '../components/RenderReactiveForm'\n\nimport { expired } from '../utils'\n\nfunction Fill(){\n    const { id } = useParams()\n\n    const [form, setForm] = useState(null)\n    const [msg, setMsg] = useState('')\n    const [submitted, setSubmitted] = useState(false)\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        if(!localStorage.getItem('gfc-user')) return\n        const fetchData = async () => {\n            try{\n                let frm = await getForm({ id })\n                setForm(frm)\n                setLoading(false)\n            }catch(e){\n                setLoading(false)\n                setMsg(e.message)\n            }\n        }\n        fetchData()\n    }, [id])\n\n    return (\n        <div>\n            <h1 className=\"heading\">{form ? form.title : \"Fill in the form\"}</h1>\n            {\n                loading ? <p className=\"text-center mt-1\"><span className=\"spinner\"></span></p>\n                : msg ? <h3 className=\"msg mt-1\">{msg}</h3>\n                : submitted ? <h3 className=\"msg mt-1\">{form ? (form.endMessage || \"Thank you for submitting the form\") : \"Unknown state\"}</h3>\n                : form ? expired() ? <h3 className=\"msg mt-1\">This form has been expired</h3>\n                : <RenderReactiveForm model={form} onSubmitted={() => setSubmitted(true)} />\n                : <h3 className=\"msg mt-1\">Form not found</h3> \n            }\n        </div>\n    )\n}\n\nexport default Fill"]},"metadata":{},"sourceType":"module"}