{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fatim\\\\Downloads\\\\formable-main\\\\src\\\\components\\\\AddMultiOptionField.js\",\n    _s = $RefreshSig$();\n\nimport { useState, createRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddMultiOptionField({\n  inputType,\n  add,\n  close\n}) {\n  _s();\n\n  const [err, setErr] = useState(\"\");\n  const [opterr, setOpterr] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [required, setRequired] = useState(false);\n  const inputRef = /*#__PURE__*/createRef();\n  const [options, setOptions] = useState([]);\n  const [option, setOption] = useState(\"\");\n\n  const addField = () => {\n    if (!title.trim()) return setErr(\"Title is required\");\n    if (title.trim().length < 4) return setErr(\"Title should be atleast 4 characters long\");\n    if (options.length < 1) return setErr(\"Atleast one option is required\");\n    add({\n      title,\n      required,\n      options,\n      type: inputType\n    });\n    close();\n  };\n\n  const addOption = () => {\n    if (!option.trim()) return setOpterr(\"Option is required\");\n    let _opts = [...options];\n\n    _opts.push(option);\n\n    setOption(\"\");\n    setOptions(_opts);\n    inputRef.current.value = \"\";\n    setOpterr(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter field title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: `Eg. Select your ${inputType === \"multioption-multianswer\" ? \"skills\" : \"gender\"}`,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), options.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"b\",\n        children: \"Options\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), options.map((opt, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input inline mb-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: inputType === \"multioption-singleanswer\" ? \"radio\" : \"checkbox\",\n          className: \"mr-1\",\n          name: \"inputs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: opt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input grey-container p-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"mb-1\",\n        placeholder: \"Enter a option\",\n        onChange: e => setOption(e.target.value),\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), opterr && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"err mb-1 text-small\",\n        children: opterr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn\",\n        onClick: addOption,\n        children: \"Add Option\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input inline\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Required: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: () => setRequired(!required)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), err && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"err mb-1\",\n      children: err\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: addField,\n      children: \"add field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddMultiOptionField, \"DajWiNTydjWiftayFBYQPvsQZ6U=\");\n\n_c = AddMultiOptionField;\nexport default AddMultiOptionField;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddMultiOptionField\");","map":{"version":3,"sources":["C:/Users/fatim/Downloads/formable-main/src/components/AddMultiOptionField.js"],"names":["useState","createRef","AddMultiOptionField","inputType","add","close","err","setErr","opterr","setOpterr","title","setTitle","required","setRequired","inputRef","options","setOptions","option","setOption","addField","trim","length","type","addOption","_opts","push","current","value","e","target","map","opt","index"],"mappings":"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","sourcesContent":["import { useState, createRef } from 'react'\n\nfunction AddMultiOptionField({ inputType, add, close }) {\n    const [err, setErr] = useState(\"\")\n    const [opterr, setOpterr] = useState(\"\")\n\n    const [title, setTitle] = useState(\"\")\n    const [required, setRequired] = useState(false)\n    const inputRef = createRef()\n    const [options, setOptions] = useState([])\n    const [option, setOption] = useState(\"\")\n\n    const addField = () => {\n        if (!title.trim()) return setErr(\"Title is required\")\n        if (title.trim().length < 4) return setErr(\"Title should be atleast 4 characters long\")\n        if (options.length < 1) return setErr(\"Atleast one option is required\")\n        add({\n            title,\n            required,\n            options,\n            type: inputType\n        })\n        close()\n    }\n\n    const addOption = () => {\n        if (!option.trim()) return setOpterr(\"Option is required\")\n        let _opts = [...options]\n        _opts.push(option)\n        setOption(\"\")\n        setOptions(_opts)\n        inputRef.current.value = \"\"\n        setOpterr(\"\")\n    }\n\n    return (\n        <div>\n            <div className=\"input\">\n                <label>Enter field title</label>\n                <input type=\"text\" placeholder={`Eg. Select your ${inputType === \"multioption-multianswer\" ? \"skills\" : \"gender\"}`} onChange={e => setTitle(e.target.value)} />\n            </div>\n            {options.length > 0 && (\n                <div className=\"mb-1\">\n                    <p className=\"b\">Options</p>\n                    {options.map((opt, index) => (\n                        <div className=\"input inline mb-0\" key={index}>\n                            <input type={inputType === \"multioption-singleanswer\" ? \"radio\" : \"checkbox\"} className=\"mr-1\" name=\"inputs\" />\n                            <label>{opt}</label>\n                        </div>\n                    ))}\n                </div>\n            )}\n            <div className=\"input grey-container p-1\">\n                <input type=\"text\" className=\"mb-1\" placeholder=\"Enter a option\" onChange={e => setOption(e.target.value)} ref={inputRef} />\n                {opterr && <p className=\"err mb-1 text-small\">{opterr}</p>}\n                <button class=\"btn\" onClick={addOption}>Add Option</button>\n            </div>\n            <div className=\"input inline\">\n                <label>Required: </label>\n                <input type=\"checkbox\" onChange={() => setRequired(!required)} />\n            </div>\n            {err && <p className=\"err mb-1\">{err}</p>}\n            <button className=\"btn\" onClick={addField}>add field</button>\n        </div>\n    )\n}\n\nexport default AddMultiOptionField"]},"metadata":{},"sourceType":"module"}