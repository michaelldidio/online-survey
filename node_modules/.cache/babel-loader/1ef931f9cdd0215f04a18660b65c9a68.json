{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fatim\\\\Desktop\\\\SurveysFinal\\\\src\\\\components\\\\AddFileField.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { arrayToggle } from '../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddFileField(_ref) {\n  _s();\n\n  let {\n    inputType,\n    add,\n    close\n  } = _ref;\n  const [err, setErr] = useState(\"\");\n  const availableTypes = [\"jpg\", \"png\", \"jpeg\", \"pdf\", \"txt\"];\n  const [title, setTitle] = useState(\"\");\n  const [required, setRequired] = useState(false);\n  const [fileTypes, setFileTypes] = useState([]);\n\n  const addFileType = type => {\n    let _fileTypes = [...fileTypes];\n    arrayToggle(_fileTypes, type);\n    setFileTypes(_fileTypes);\n  };\n\n  const addField = () => {\n    if (!title.trim()) return setErr(\"Title is required\");\n    if (title.trim().length < 4) return setErr(\"Title should be atleast 4 characters long\");\n    if (!fileTypes.length) return setErr(\"Select atleast one file type\");\n    add({\n      title,\n      required,\n      type: inputType,\n      accepted: fileTypes\n    });\n    close();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter survey title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Eg. All about you\",\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select acceptable file types\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline-inputs\",\n        children: availableTypes.map((type, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"mr-1\",\n            onChange: () => addFileType(type)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\".\", type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input inline\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Required: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: () => setRequired(!required)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), err && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"err mb-1\",\n      children: err\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: addField,\n      children: \"add field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddFileField, \"awK8aKakf3s8zxMLdmXtqpLWN/Q=\");\n\n_c = AddFileField;\nexport default AddFileField;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddFileField\");","map":{"version":3,"names":["useState","arrayToggle","AddFileField","inputType","add","close","err","setErr","availableTypes","title","setTitle","required","setRequired","fileTypes","setFileTypes","addFileType","type","_fileTypes","addField","trim","length","accepted","e","target","value","map","index"],"sources":["C:/Users/fatim/Desktop/SurveysFinal/src/components/AddFileField.js"],"sourcesContent":["import { useState } from 'react'\nimport { arrayToggle } from '../utils'\nfunction AddFileField({ inputType, add, close }) {\n    const [err, setErr] = useState(\"\")\n\n    const availableTypes = [\"jpg\", \"png\", \"jpeg\", \"pdf\", \"txt\"]\n\n    const [title, setTitle] = useState(\"\")\n    const [required, setRequired] = useState(false)\n    const [fileTypes, setFileTypes] = useState([])\n\n    const addFileType = type => {\n        let _fileTypes = [...fileTypes]\n        arrayToggle(_fileTypes, type)\n        setFileTypes(_fileTypes)\n    }\n\n    const addField = () => {\n        if (!title.trim()) return setErr(\"Title is required\")\n        if (title.trim().length < 4) return setErr(\"Title should be atleast 4 characters long\")\n        if (!fileTypes.length) return setErr(\"Select atleast one file type\")\n        add({\n            title,\n            required,\n            type: inputType,\n            accepted: fileTypes\n        })\n        close()\n    }\n\n    return (\n        <div>\n            <div className=\"input\">\n                <label>Enter survey title</label>\n                <input type=\"text\" placeholder=\"Eg. All about you\" onChange={e => setTitle(e.target.value)} />\n            </div>\n            <div className=\"input\">\n                <label>Select acceptable file types</label>\n                <div className=\"inline-inputs\">\n                    {availableTypes.map((type, index) => (\n                        <div className=\"input inline\" key={index}>\n                            <input type=\"checkbox\" className=\"mr-1\" onChange={() => addFileType(type)} />\n                            <label>.{type}</label>\n                        </div>\n                    ))}\n                </div>\n            </div>\n            <div className=\"input inline\">\n                <label>Required: </label>\n                <input type=\"checkbox\" onChange={() => setRequired(!required)} />\n            </div>\n            {err && <p className=\"err mb-1\">{err}</p>}\n            <button className=\"btn\" onClick={addField}>add field</button>\n        </div>\n    )\n}\n\nexport default AddFileField"],"mappings":"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"},"metadata":{},"sourceType":"module"}