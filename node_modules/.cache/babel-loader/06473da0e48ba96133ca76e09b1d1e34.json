{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fatim\\\\Downloads\\\\formable-main\\\\src\\\\components\\\\RenderPlainForm.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RenderPlainForm({\n  model\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grey-container mb-1\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-1\",\n      children: \"Preview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 13\n    }, this), model.fields.map((field, index) => field.type === \"short-text\" || field.type === \"number\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [field.title, field.required && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"err\",\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 64\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: field.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 25\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 21\n    }, this) : field.type === \"long-text\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [field.title, field.required && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"err\",\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 64\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 25\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 21\n    }, this) : field.type === \"file\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [field.title, field.required && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"err\",\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 64\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }, this) : field.type === \"multioption-singleanswer\" || field.type === \"multioption-multianswer\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [field.title, field.required && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"err\",\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 64\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this), field.options.map((option, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input inline\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: field.type === \"multioption-singleanswer\" ? \"radio\" : \"checkbox\",\n          className: \"mr-1\",\n          name: field.title.replace(\" \", \"\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 33\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 29\n      }, this))]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Unknown fiel type.\"\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 19\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn mt-1\",\n      children: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 9\n  }, this);\n}\n\n_c = RenderPlainForm;\nexport default RenderPlainForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderPlainForm\");","map":{"version":3,"sources":["C:/Users/fatim/Downloads/formable-main/src/components/RenderPlainForm.js"],"names":["RenderPlainForm","model","fields","map","field","index","type","title","required","options","option","idx","replace"],"mappings":"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","sourcesContent":["function RenderPlainForm({ model }){\n    return (\n        <div className=\"grey-container mb-1\">\n            <h1 className=\"mb-1\">Preview</h1>\n            {model.fields.map((field, index) => field.type === \"short-text\" || field.type === \"number\" ? \n                (\n                    <div key={index} className=\"input\">\n                        <label>{field.title}{field.required && <span className=\"err\">*</span>}</label>\n                        <input type={field.type} />\n                    </div>\n                )\n                : field.type === \"long-text\" ? \n                (\n                    <div key={index} className=\"input\">\n                        <label>{field.title}{field.required && <span className=\"err\">*</span>}</label>\n                        <textarea></textarea>\n                    </div>\n                )\n                : field.type === \"file\" ? \n                (\n                    <div key={index} className=\"input\">\n                        <label>{field.title}{field.required && <span className=\"err\">*</span>}</label>\n                        <input type=\"file\" />\n                    </div>\n                )\n                : field.type === \"multioption-singleanswer\" || field.type === \"multioption-multianswer\" ? \n                (\n                    <div key={index} className=\"input\">\n                        <label>{field.title}{field.required && <span className=\"err\">*</span>}</label>\n                        { field.options.map((option, idx) => (\n                            <div className=\"input inline\" key={idx}>\n                                <input type={field.type === \"multioption-singleanswer\" ? \"radio\" : \"checkbox\"} className=\"mr-1\" name={field.title.replace(\" \", \"\")} />\n                                <label>{option}</label>\n                            </div>\n                        )) }\n                    </div>\n                )\n                : <p key={index}>Unknown fiel type.</p>\n            )}\n            <button className=\"btn mt-1\">submit</button>\n        </div>\n    )\n}\n\nexport default RenderPlainForm"]},"metadata":{},"sourceType":"module"}