{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fatim\\\\Downloads\\\\formable-main\\\\src\\\\components\\\\RenderReactiveForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { createFillableModel, createSubmitableModel, updateArrOfObjState, hasError } from \"../utils\";\nimport { submitForm } from \"../db\";\nimport MultiOptionField from \"./MultiOptionField\";\nimport FileField from \"./FileField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RenderReactiveForm({\n  model,\n  onSubmitted\n}) {\n  _s();\n\n  const [fillableModel, setFillableModel] = useState(createFillableModel(model));\n  const [loading, setLoading] = useState(false);\n  const [err, setErr] = useState(\"\");\n\n  const handleSubmit = async () => {\n    setErr(\"\");\n    if (loading) return;\n    let error = hasError(fillableModel, model.id);\n    if (error) return setErr(error);\n    setLoading(true);\n    let submitableModel = createSubmitableModel(fillableModel);\n\n    try {\n      await submitForm(submitableModel, model.id);\n      setLoading(false);\n      onSubmitted();\n    } catch (e) {\n      setErr(e.message);\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-form mt-1\",\n    children: [fillableModel.map((field, index) => [\"short-text\", \"number\"].indexOf(field.type) > -1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [field.title, field.required && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"err\",\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 60\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: field.type === \"number\" ? \"number\" : \"text\",\n        onChange: e => updateArrOfObjState(setFillableModel, fillableModel, index, \"value\", e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this) : field.type === \"long-text\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [field.title, field.required && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"err\",\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 60\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: e => updateArrOfObjState(setFillableModel, fillableModel, index, \"value\", e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this) : field.type === \"multioption-singleanswer\" || field.type === \"multioption-multianswer\" ? /*#__PURE__*/_jsxDEV(MultiOptionField, {\n      fieldModel: field,\n      onSelected: res => updateArrOfObjState(setFillableModel, fillableModel, index, \"value\", res)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this) : field.type === \"file\" ? /*#__PURE__*/_jsxDEV(FileField, {\n      fieldModel: field,\n      onCompleted: fileName => updateArrOfObjState(setFillableModel, fillableModel, index, \"value\", fileName)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Unknown field type\"\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)), err && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"err mb-1\",\n      children: err\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: handleSubmit,\n      children: loading ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"spinner white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 72\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 114\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RenderReactiveForm, \"rehGp9lf1o1HdkJ+/rz75mVQ0yg=\");\n\n_c = RenderReactiveForm;\nexport default RenderReactiveForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderReactiveForm\");","map":{"version":3,"sources":["C:/Users/fatim/Downloads/formable-main/src/components/RenderReactiveForm.js"],"names":["useState","createFillableModel","createSubmitableModel","updateArrOfObjState","hasError","submitForm","MultiOptionField","FileField","RenderReactiveForm","model","onSubmitted","fillableModel","setFillableModel","loading","setLoading","err","setErr","handleSubmit","error","id","submitableModel","e","message","map","field","index","indexOf","type","title","required","target","value","res","fileName"],"mappings":"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","sourcesContent":["import { useState } from 'react'\n\nimport { createFillableModel, createSubmitableModel, updateArrOfObjState, hasError } from \"../utils\"\n\nimport { submitForm } from \"../db\"\n\nimport MultiOptionField from \"./MultiOptionField\"\nimport FileField from \"./FileField\"\n\nfunction RenderReactiveForm({ model, onSubmitted }){\n    const [fillableModel, setFillableModel] = useState(createFillableModel(model))\n    const [loading, setLoading] = useState(false)\n    const [err, setErr] = useState(\"\")\n\n    const handleSubmit = async () => {\n        setErr(\"\")\n        if(loading) return\n\n        let error = hasError(fillableModel, model.id)\n        if(error) return setErr(error)\n\n        setLoading(true)\n\n        let submitableModel = createSubmitableModel(fillableModel)\n        \n        try{\n            await submitForm(submitableModel, model.id)\n            setLoading(false)\n            onSubmitted()\n        }catch(e){\n            setErr(e.message)\n            setLoading(false)\n        }\n    }\n\n    return (\n        <div className=\"main-form mt-1\">\n            { fillableModel.map((field, index) => [\"short-text\", \"number\"].indexOf(field.type) > -1\n            ? (\n                <div key={index} className=\"input\">\n                    <label>{field.title}{field.required && <span className=\"err\">*</span>}</label>\n                    <input type={field.type === \"number\" ? \"number\" : \"text\"} onChange={e => updateArrOfObjState(setFillableModel, fillableModel, index, \"value\", e.target.value)} />\n                </div>\n            ) : field.type === \"long-text\" ? (\n                <div key={index} className=\"input\">\n                    <label>{field.title}{field.required && <span className=\"err\">*</span>}</label>\n                    <textarea onChange={e => updateArrOfObjState(setFillableModel, fillableModel, index, \"value\", e.target.value)}></textarea>\n                </div>\n            ) : field.type === \"multioption-singleanswer\" || field.type === \"multioption-multianswer\" ? (\n                <MultiOptionField key={index} fieldModel={field} onSelected={res => updateArrOfObjState(setFillableModel, fillableModel, index, \"value\", res)} />\n            ) : field.type === \"file\" ? (\n                <FileField key={index} fieldModel={field} onCompleted={fileName => updateArrOfObjState(setFillableModel, fillableModel, index, \"value\", fileName)} />\n            ) : <p key={index}>Unknown field type</p>)}\n            {err && <p className=\"err mb-1\">{err}</p>}\n            <button className=\"btn\" onClick={handleSubmit}>{ loading ? <span className=\"spinner white\"></span> : <span>submit</span>}</button>\n        </div>\n    )\n}\n\nexport default RenderReactiveForm"]},"metadata":{},"sourceType":"module"}